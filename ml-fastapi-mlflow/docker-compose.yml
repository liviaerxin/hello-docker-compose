version: "3"
services:
  inference-server:
    build: ./inference-server
    environment:
      - MLFLOW_SERVER=http://mlflow-server:5000
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    restart: always
    ports:
      - "8000:8000"
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - capabilities: [gpu]
    depends_on:
      - mlflow-server

  mlflow-server:
    # image: ghcr.io/mlflow/mlflow:latest
    build: ./mlflow-server
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - MLFLOW_S3_ENDPOINT_URL=http://localhost:9000
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow.db
      --default-artifact-root s3://mlflow-artifacts/
      --host 0.0.0.0 --port 5000
    volumes:
      - ./mlflow.db:/mlflow.db
    depends_on:
      - minio

  # MinIO - object storage (S3-compatible)
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001" # UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: "mc alias set myminio http://minio:9000 minioadmin minioadmin"
      interval: 5s
      timeout: 3s
      retries: 5

  # MinIO - initialize bucket
  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/mlflow-artifacts3;
      /usr/bin/mc policy set public myminio/mlflow-artifacts3;
      exit 0;
      "

volumes:
  minio-data:
