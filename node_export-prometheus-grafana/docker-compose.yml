version: "3"

services:
  node-exporter:
    image: prom/node-exporter:v1.7.0
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
      # - "/:/host:ro,rslave"
    command: 
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.50.1
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      # - "prometheus-storage:/prometheus"    # Provide persistent storage for Prometheus's data 
    ports:
      - 9090:9090
    depends_on:
      - node-exporter
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:10.2.4
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      # Disable auth
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin      # Role for unauthenticated users, valid values are `Admin`, `Editor` and `Viewer`
      - GF_AUTH_DISABLE_SIGNOUT_MENU=true     # Hide UI for signout
      - GF_AUTH_DISABLE_LOGIN_FORM=true       # Hide UI for login
    volumes:
      - "./grafana/datasources:/etc/grafana/provisioning/datasources"   # Provide default datasources
      - "./grafana/dashboards:/etc/grafana/provisioning/dashboards"     # Provide default dashboards. You can also import dashboards from UI then persist it in `grafana-storage`.
      # - grafana-storage:/var/lib/grafana    # Provide persistent storage for Grafana's data, such as your added datasource and dashboard.
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    networks:
      - monitoring

volumes:
  prometheus-storage:
  grafana-storage:

networks:
  monitoring: